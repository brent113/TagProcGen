Removed because the SCADA output is no longer a single sheet. No need to merge different types.

    ' todo: remove this when done
    ' ''' <summary>
    ' ''' Merge input and output tags with the same point name into a single worksheet row, combining column data
    ' ''' </summary>
    'Private Sub MergeScadaTags()
    '    Dim MergingCol = CInt(Me.Pointers(Constants.TPL_SCADA_MERGE_COMPARE_COLUMN))
    '    Dim DataInCol = CInt(Me.Pointers(Constants.TPL_SCADA_MERGE_DATA_IN_COLUMN))
    '    Dim DataOutCol = CInt(Me.Pointers(Constants.TPL_SCADA_MERGE_DATA_OUT_COLUMN))
    '    Dim MergedScadaTags As New OutputList

    '    ' Loop through each tag entry without an enumerator because
    '    ' we will be updating the list by removing rows.
    '    Dim i = 0
    '    Do While i < Me._ScadaTags.Count
    '        Dim CurrentScadaRowEntry = Me._ScadaTags(i)

    '        ' Select tags:
    '        '  - Add row index into new anonymous type
    '        '  - Where (typically) searched row's name = current row's name
    '        Dim TagNameQuery = Me._ScadaTags.
    '            Select(Function(rowEntry, idx) New With {Key .Tag = rowEntry, Key .Index = idx}).
    '            Where(Function(indexedRowEntry) indexedRowEntry.Tag(MergingCol) = CurrentScadaRowEntry(MergingCol))

    '        ' Do not allow multiple tags in any given direction
    '        If TagNameQuery.Count > 2 Then
    '            ' More than 2 tags implies 2 tags in same direction (only 2 directions possible)
    '            Throw New Exception(String.Format("Duplicate tag names: {0}", TagNameQuery.First.Tag(MergingCol)))
    '        ElseIf TagNameQuery.Count > 1 Then
    '            Dim Item1 = TagNameQuery(0)
    '            Dim Item2 = TagNameQuery(1)

    '            ' Get data directions
    '            Dim Item1DirQuery = {DataInCol, DataOutCol}.Where(Function(x) Item1.Tag.ContainsKey(x)).ToList
    '            If Item1DirQuery.Count <> 1 Then Throw New Exception("Invalid number of items returned while merging.")
    '            Dim Item1DirIn = Item1DirQuery(0) = DataInCol

    '            Dim Item2DirQuery = {DataInCol, DataOutCol}.Where(Function(x) Item2.Tag.ContainsKey(x)).ToList
    '            If Item2DirQuery.Count <> 1 Then Throw New Exception("Invalid number of items returned while merging.")
    '            Dim Item2DirIn = Item2DirQuery(0) = DataInCol

    '            ' Same direction? throw error
    '            If Item1DirIn = Item2DirIn Then Throw New Exception(String.Format("Duplicate item names with the same data direction: {0}", Item1.Tag(MergingCol)))

    '            ' Copy both items into merged columns
    '            Dim Merged As New OutputRowEntryDictionary(Item1.Tag)
    '            For Each kv In Item2.Tag
    '                Merged(kv.Key) = kv.Value
    '            Next
    '            MergedScadaTags.Add(Merged)

    '            ' Remove highest index first because it doesn't affect low index
    '            Me._ScadaTags.RemoveAt(Math.Max(Item1.Index, Item2.Index))
    '            Me._ScadaTags.RemoveAt(Math.Min(Item1.Index, Item2.Index))
    '            ' Don't add 1 to iterator
    '        Else
    '            ' Copy to output
    '            MergedScadaTags.Add(CurrentScadaRowEntry)
    '            i += 1
    '        End If
    '    Loop

    '    Me._ScadaTags = MergedScadaTags
    'End Sub